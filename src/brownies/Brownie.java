package brownies;
/** 
 * This class is used to create brownies as
 * objects within the programme.
 * The brownie class stores the "friends" the Brownie has declared 
 * i.e. other brownies she says likes and the "non-friends" who she
 * musn't share a tent with. This class also has a
 * popularity score for the brownie, which depends on the 
 * context of the camp that the Brownie will be part of i.e. 
 * the popularity score is generated by the camp class.
 * Brownies also have a name (string) and - just for fun - a
 * thing (string) that they say
 *
 * @author Alex Peden
 *
 */


 public class Brownie {
	private String brownie_name;
	private Brownie[]friends;//The people the brownie says she likes
	private Brownie[]non_friends;//The people she mustn't share with
	private double popularity; //Depends on the camp
	
	/**Creates a brownie with a name and an array for storing friends
	 *
	 * @param name
	 */
	Brownie(String name){
		brownie_name = name;
		friends = new Brownie[3];	
		non_friends = new Brownie[3]; 
	}
	
	void sayHello() {
		System.out.println("I'm "+brownie_name);
	}
	
	public String toString() {
		return brownie_name;
	}
	
	/**Used by the leader class to set the brownie popularity score
	 * 
	 * @param popularity_score
	 */	
	void setPopularity(double popularity_score) {
		popularity = popularity_score;
	}

	double getPopularity() {
		return popularity;
	}
	
	/*Method: setFriend*/ 
	/**Stores the people the Brownie says she likes. 
	 * 
	 * @param i 			the index used to store the name
	 * @param friend_name  	A Brownie (object)
	 */
	void setFriends(int i, Brownie friend_name) {		
		friends[i] = friend_name;
	}
	
	/*Method: getFriends*/
	/**
	 * 
	 * @return friends: 	
	 */	
	Brownie[] getFriends() {
		return friends;
	}
	
	/*Method: setNonFriend*/
	/**creates and array of Brownies the Brownie in question
	 * musn't share with. 
	 * 
	 * 
	 * @param i 			the index used to store the name
	 * @param friend_name  	A Brownie
	 */
	void setNonFriends(int i, Brownie nonfriend_name) {
		friends[i] = nonfriend_name;
	}
	
	/*Method: getNonFriends()/
	/**
	 * @return non_friends 		
	 *
	 */
	Brownie[] getNonFriends() {
		return non_friends;
	}
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
	}
}
